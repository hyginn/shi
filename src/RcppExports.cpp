// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cpp_codonSplit1
Rcpp::StringVector cpp_codonSplit1(std::string cDNA);
RcppExport SEXP _shi_cpp_codonSplit1(SEXP cDNASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type cDNA(cDNASEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_codonSplit1(cDNA));
    return rcpp_result_gen;
END_RCPP
}
// cpp_codonSplit2
Rcpp::StringVector cpp_codonSplit2(std::string cDNA);
RcppExport SEXP _shi_cpp_codonSplit2(SEXP cDNASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type cDNA(cDNASEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_codonSplit2(cDNA));
    return rcpp_result_gen;
END_RCPP
}
// cpp_codonSplit3
std::vector<std::string> cpp_codonSplit3(std::string cDNA);
RcppExport SEXP _shi_cpp_codonSplit3(SEXP cDNASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type cDNA(cDNASEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_codonSplit3(cDNA));
    return rcpp_result_gen;
END_RCPP
}
// hello
void hello();
RcppExport SEXP _shi_hello() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    hello();
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_shi_cpp_codonSplit1", (DL_FUNC) &_shi_cpp_codonSplit1, 1},
    {"_shi_cpp_codonSplit2", (DL_FUNC) &_shi_cpp_codonSplit2, 1},
    {"_shi_cpp_codonSplit3", (DL_FUNC) &_shi_cpp_codonSplit3, 1},
    {"_shi_hello", (DL_FUNC) &_shi_hello, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_shi(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
